events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    gzip on;

    # HTTPS Server
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/ssl/ecdsa_cert.pem;
        ssl_certificate_key /etc/nginx/ssl/ecdsa_private_key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers   'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256';

        location ^~ /auth {
            proxy_pass http://host.docker.internal:3001/api/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ^~ /products {
            proxy_pass http://host.docker.internal:3002/api/products;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ^~ /orders {
            proxy_pass http://host.docker.internal:3003/api/orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ^~ /items {
            proxy_pass http://host.docker.internal:3004/api/items;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP Redirect to HTTPS
    server {
        listen 80;
        server_name localhost;

        location / {
            return 307 https://$host$request_uri;
        }
    }
}
